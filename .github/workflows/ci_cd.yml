name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  DOCUMENTATION_CNAME: 'sherlock.docs.pyansys.com'
  DOC_DEPLOYMENT_IMAGE_TAG: v23.2.0

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install style requirements
        run: |
          pip install -r requirements_style.txt --disable-pip-version-check
      
      - name: Codespell
        run: |
          make codespell
        continue-on-error: true

      - name: flake8
        run: |
          make flake8

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: pyansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests and coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry pytest
          python -m pip install ansys-api-sherlock --index-url 'https://${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/' --no-dependencies
      
      - name: Install ansys-sherlock-core
        run: |
          pip install build
          python -m build
          pip install dist/ansys_sherlock-0.1.dev0-py3-none-any.whl
          python -c "from ansys.sherlock import core as pysherlock; print('Successful import')"
          
      - name: Test with pytest
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: pytest


  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: [ docs-style ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit tox
      
      - name: Build Documentation
        run: |
          pip install -r requirements_docs.txt
          cd doc
          make html
          touch build/html/.nojekyll
      
      - name: Update HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation
          path: doc/build/html
          retention-days: 7
      
#      - name: Deploy stable documentation
#        uses: pyansys/actions/doc-deploy-stable@v3
#        # The following commented condition should be uncommented when the release is public to ensure a stable user documentation.
#        # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'dev')
#        if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
#        with:
#            doc-artifact-name: 'HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}'
#            decompress_artifact: true
#            cname: ${{ env.DOCUMENTATION_CNAME }}
#            token: ${{ secrets.GH_TOKEN }}
      
      - name: Deploy
        if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: doc/build/html
          clean: true

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ style, tests, docs ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build twine
          
      - name: "Build library source and wheel artifacts"
        uses: pyansys/actions/build-library@v3
        with:
          library-name: "ansys-sherlock"
        
      - name: "Release to the private PyPI repository"
        uses: pyansys/actions/release-pypi-private@v3
        with:
          library-name: "ansys-sherlock"
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}


          
