name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
      
env:
  MAIN_PYTHON_VERSION: '3.9'
  DOCUMENTATION_CNAME: 'sherlock.docs.pyansys.com'

jobs:
  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install style requirements
        run: |
          pip install -r requirements_style.txt --disable-pip-version-check
      
      - name: Codespell
        run: |
          make codespell
        continue-on-error: true

      - name: flake8
        run: |
          make flake8


  tests:
    name: Tests and coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry pytest
          python -m pip install ansys-api-sherlock --index-url 'https://${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/' --no-dependencies
      - name: Install ansys-sherlock-core
        run: |
          pip install build
          python -m build
          pip install dist/ansys_sherlock-0.1.dev0-py3-none-any.whl
          python -c "from ansys.sherlock import core as pysherlock; print('Successful import')"
      - name: Test with pytest
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: pytest
  
  doc-build:
    name: Build library documentation
    runs-on: ubuntu-latest
    needs: style
    steps:
      - name: "Run Ansys Documentation building action"
        uses: pyansys/actions/doc-build@v3
            
  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: doc-build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - name: "Deploy the stable documentation"
        uses: pyansys/actions/doc-deploy-stable@v3
        with:
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.GITHUB_TOKEN }}
        
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ style, tests, doc-build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - uses: actions/download-artifact@v3
        with:
          name: pysherlock-client
          path: dist

      # list current directory
      - name: List directory structure
        run: ls -R

      - name: Upload to Private PyPi
        run: |
          pip install twine
          python -m twine upload --skip-existing ./**/*.whl
          python -m twine upload --skip-existing ./**/*.tar.gz
        env:
          TWINE_USERNAME: PAT
          TWINE_PASSWORD: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload
        
  upload_docs_release:
    name: "Upload release documentation"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Deploy the stable documentation
        uses: pyansys/actions/doc-deploy-stable@v3.0.1
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

