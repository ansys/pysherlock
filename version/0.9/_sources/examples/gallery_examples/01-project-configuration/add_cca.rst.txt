
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\gallery_examples\01-project-configuration\add_cca.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_01-project-configuration_add_cca.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_01-project-configuration_add_cca.py:


.. _ref_add_cca_and_import_odb:

=========================
Add Circuit Card Assembly
=========================

This example demonstrates how to connect to the Sherlock gRPC service, import a project,
and add a CCA (Circuit Card Assembly) to a project.

Description
-----------
Sherlock's gRPC API allows users to automate workflows such as adding CCAs to a project
and importing ODB++ archives.
This script demonstrates how to:
- Connect to the Sherlock service.
- Import a project.
- Add CCAs to the project.

The added CCAs allow for proper circuit analysis and component tracking within the project.

.. GENERATED FROM PYTHON SOURCE LINES 40-49

.. code-block:: Python



    import os

    from examples.examples_globals import get_sherlock_tutorial_path

    from ansys.sherlock.core import launcher
    from ansys.sherlock.core.errors import SherlockAddCCAError, SherlockImportProjectZipArchiveError


.. GENERATED FROM PYTHON SOURCE LINES 51-54

Connect to Sherlock
===================
Connect to the Sherlock service and ensure proper initialization.

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: Python


    sherlock = launcher.connect(port=9092, timeout=10)


.. GENERATED FROM PYTHON SOURCE LINES 58-61

Delete Project
==============
Delete the project if it already exists.

.. GENERATED FROM PYTHON SOURCE LINES 61-68

.. code-block:: Python


    try:
        sherlock.project.delete_project("Test")
        print("Project deleted successfully.")
    except Exception:
        pass


.. GENERATED FROM PYTHON SOURCE LINES 69-72

Import Tutorial Project
=======================
Import the tutorial project zip archive from the Sherlock tutorial directory.

.. GENERATED FROM PYTHON SOURCE LINES 72-83

.. code-block:: Python


    try:
        sherlock.project.import_project_zip_archive(
            project="Test",
            category="Demos",
            archive_file=os.path.join(get_sherlock_tutorial_path(), "Auto Relay Project.zip"),
        )
        print("Tutorial project imported successfully.")
    except SherlockImportProjectZipArchiveError as e:
        print(f"Error importing project: {str(e)}")


.. GENERATED FROM PYTHON SOURCE LINES 84-87

Add CCA to Project
===================
Add a CCA to a project.

.. GENERATED FROM PYTHON SOURCE LINES 87-107

.. code-block:: Python


    try:
        sherlock.project.add_cca(
            project="Test",
            cca_properties=[
                {
                    "cca_name": "Card 2",
                    "description": "Second CCA",
                    "default_solder_type": "SAC305",
                    "default_stencil_thickness": 10,
                    "default_stencil_thickness_units": "mm",
                    "default_part_temp_rise": 20,
                    "default_part_temp_rise_units": "C",
                    "guess_part_properties_enabled": False,
                }
            ],
        )
        print("Card 2 added successfully.")
    except SherlockAddCCAError as e:
        print(f"Error adding CCA: {str(e)}")


.. _sphx_glr_download_examples_gallery_examples_01-project-configuration_add_cca.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: add_cca.ipynb <add_cca.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: add_cca.py <add_cca.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: add_cca.zip <add_cca.zip>`
