
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\gallery_examples\03-exporting\export_project.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_03-exporting_export_project.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_03-exporting_export_project.py:


.. _ref_sherlock_project_export:

=======================
Sherlock Project Export
=======================

This example demonstrates how to connect to the Sherlock gRPC service, import a project,
and export the project in multiple configurations.

Description
Sherlock's gRPC API enables automation of various workflows, including project export.
This script demonstrates how to:
- Connect to the Sherlock service.
- Import a tutorial project ZIP archive.
- Export a project with different configurations.

.. GENERATED FROM PYTHON SOURCE LINES 37-49

.. code-block:: Python



    import os

    from examples.examples_globals import get_sherlock_tutorial_path, get_temp_dir

    from ansys.sherlock.core import launcher
    from ansys.sherlock.core.errors import (
        SherlockExportProjectError,
        SherlockImportProjectZipArchiveError,
    )


.. GENERATED FROM PYTHON SOURCE LINES 51-54

Connect to Sherlock
===================
Connect to the Sherlock service and ensure proper initialization.

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: Python


    sherlock = launcher.connect(port=9092, timeout=10)


.. GENERATED FROM PYTHON SOURCE LINES 58-61

Delete Project
==============
Delete the project if it already exists.

.. GENERATED FROM PYTHON SOURCE LINES 61-68

.. code-block:: Python


    try:
        sherlock.project.delete_project("Test")
        print("Project deleted successfully.")
    except Exception:
        pass


.. GENERATED FROM PYTHON SOURCE LINES 69-72

Import Tutorial Project
=======================
Import a sample project ZIP archive provided with the Sherlock installation.

.. GENERATED FROM PYTHON SOURCE LINES 72-83

.. code-block:: Python


    try:
        sherlock.project.import_project_zip_archive(
            project="Test",
            category="Demos",
            archive_file=os.path.join(get_sherlock_tutorial_path(), "Auto Relay Project.zip"),
        )
        print("Tutorial project imported successfully.")
    except SherlockImportProjectZipArchiveError as e:
        print(f"Error importing project: {e}")


.. GENERATED FROM PYTHON SOURCE LINES 84-87

Export Project
==============
Export the imported project with different configurations.

.. GENERATED FROM PYTHON SOURCE LINES 87-123

.. code-block:: Python


    # Export with all options enabled
    try:
        sherlock.project.export_project(
            project_name="Test",
            export_design_files=True,
            export_result_files=True,
            export_archive_results=True,
            export_user_files=True,
            export_log_files=True,
            export_system_data=True,
            export_file_dir=get_temp_dir(),
            export_file_name="Exported_Project_All.zip",
            overwrite_existing_file=True,
        )
        print("Project exported successfully with all options enabled.")
    except SherlockExportProjectError as e:
        print(f"Error exporting project (all options): {e}")

    # Export with limited options
    try:
        sherlock.project.export_project(
            project_name="Test",
            export_design_files=True,
            export_result_files=False,
            export_archive_results=False,
            export_user_files=False,
            export_log_files=False,
            export_system_data=False,
            export_file_dir=get_temp_dir(),
            export_file_name="Exported_Project_Limited.zip",
            overwrite_existing_file=True,
        )
        print("Project exported successfully with limited options.")
    except SherlockExportProjectError as e:
        print(f"Error exporting project (limited options): {e}")


.. _sphx_glr_download_examples_gallery_examples_03-exporting_export_project.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: export_project.ipynb <export_project.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: export_project.py <export_project.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: export_project.zip <export_project.zip>`
