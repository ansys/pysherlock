
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\gallery_examples\01-project-configuration\update_parts_list.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_01-project-configuration_update_parts_list.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_01-project-configuration_update_parts_list.py:


.. _ref_update_parts_list:

=================
Update Parts List
=================

This example demonstrates how to connect to the Sherlock gRPC service, import a project,
update the parts list, and properly close the connection.

Description
-----------
Sherlock's gRPC API allows users to automate workflows such as updating the
parts list for printed circuit boards (PCBs). This script shows how to:

- Launch the Sherlock service.
- Import a project.
- Update the parts list.
- Properly close the gRPC connection.

The updated parts list ensures alignment with a specified library for consistency and accuracy.

.. GENERATED FROM PYTHON SOURCE LINES 42-56

.. code-block:: Python



    import os

    import SherlockCommonService_pb2
    import SherlockPartsService_pb2
    from examples.examples_globals import get_sherlock_tutorial_path

    from ansys.sherlock.core import launcher
    from ansys.sherlock.core.errors import (
        SherlockImportProjectZipArchiveError,
        SherlockUpdatePartsListError,
    )


.. GENERATED FROM PYTHON SOURCE LINES 58-61

Connect to Sherlock
===================
Connect to the Sherlock service and ensure proper initialization.

.. GENERATED FROM PYTHON SOURCE LINES 61-64

.. code-block:: Python


    sherlock = launcher.connect(port=9092, timeout=10)


.. GENERATED FROM PYTHON SOURCE LINES 65-68

Delete Project
==============
Delete the project if it already exists.

.. GENERATED FROM PYTHON SOURCE LINES 68-75

.. code-block:: Python


    try:
        sherlock.project.delete_project("Test")
        print("Project deleted successfully.")
    except Exception:
        pass


.. GENERATED FROM PYTHON SOURCE LINES 76-79

Import Tutorial Project
=======================
Import the tutorial project zip archive from the Sherlock tutorial directory.

.. GENERATED FROM PYTHON SOURCE LINES 79-90

.. code-block:: Python


    try:
        sherlock.project.import_project_zip_archive(
            project="Test",
            category="Demos",
            archive_file=os.path.join(get_sherlock_tutorial_path(), "Auto Relay Project.zip"),
        )
        print("Tutorial project imported successfully.")
    except SherlockImportProjectZipArchiveError as e:
        print(f"Error importing project zip archive: {e}")


.. GENERATED FROM PYTHON SOURCE LINES 91-94

Update Parts List
=================
Update the parts list for the "Auto Relay" CCA of the "Test" project.

.. GENERATED FROM PYTHON SOURCE LINES 94-106

.. code-block:: Python


    try:
        sherlock.parts.update_parts_list(
            project="Test",
            cca_name="Auto Relay",
            part_library="Sherlock Part Library",
            matching_mode=SherlockCommonService_pb2.MatchingMode.Both,
            duplication_mode=SherlockPartsService_pb2.DuplicationMode.Error,
        )
        print("Parts list updated successfully.")
    except SherlockUpdatePartsListError as e:
        print(f"Error updating parts list: {e}")


.. _sphx_glr_download_examples_gallery_examples_01-project-configuration_update_parts_list.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: update_parts_list.ipynb <update_parts_list.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: update_parts_list.py <update_parts_list.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: update_parts_list.zip <update_parts_list.zip>`
